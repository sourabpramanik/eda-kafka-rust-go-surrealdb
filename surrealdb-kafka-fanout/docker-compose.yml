version: "3.8"

services:
  surrealdb:
    image: surrealdb/surrealdb:latest
    container_name: surrealdb
    command: start --auth --user root --pass root file:/container-dir/dev.db
    ports:
      - "8000:8000"
    volumes:
      - surrealdb-data:/container-dir
    user: root
    environment:
      - SURREALDB_ENV_USER=root
      - SURREALDB_ENV_PASS=root
    
  zookeeper-1:
    container_name: zookeeper-1
    image: zookeeper
    restart: always
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    volumes:
    - ./config/zookeeper-1/zookeeper.properties:/kafka/config/zookeeper.properties

  kafka_broker:
    container_name: kafka_broker
    image: bitnami/kafka:latest
    restart: always
    depends_on:
      - zookeeper-1
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CREATE_TOPICS=stock_update:1:3
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 5s
      timeout: 10s
      retries: 5

  promtail:
    image: grafana/promtail:latest
    depends_on:
      - kafka_broker
    deploy:
      replicas: 2
    restart: always
    volumes:
      - type: bind
        source: ./promtail-config.yml
        target: /etc/promtail/promtail-config.yml
      - /var/log:/var/logtest:ro
    entrypoint:
      - /usr/bin/promtail
      - -config.expand-env=true
      - -config.file=/etc/promtail/promtail-config.yml
    environment:
      V1: 123
      V2: 567

networks:
  kafka_network:
    name: kafka_docker_example_net

volumes:
  surrealdb-data:
    driver: local
    driver_opts:
      type: none
      device: /path/to/local/dir
      o: bind
